// Date: 11/19/2013 1:42:00 PM
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX






package mymod.entity.ogre;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.util.MathHelper;

public class MyModelOgre extends ModelBase
{
  //fields
    ModelRenderer rShoulder;
    ModelRenderer lShoulder;
    ModelRenderer rbHorn;
    ModelRenderer rtHorn;
    ModelRenderer lbHorn;
    ModelRenderer ltHorn;
    ModelRenderer head;
    ModelRenderer body;
    ModelRenderer rArm;
    ModelRenderer lArm;
    ModelRenderer hips;
    ModelRenderer rLeg;
    ModelRenderer lLeg;
  
  public MyModelOgre()
  {
    textureWidth = 100;
    textureHeight = 88;
    
      rShoulder = new ModelRenderer(this, 2, 34);
      rShoulder.addBox(-4F, -3F, -3F, 5, 6, 6);
      rShoulder.setRotationPoint(-8F, 2F, -1.5F);
      rShoulder.setTextureSize(100, 88);
      rShoulder.mirror = true;
      setRotation(rShoulder, 0F, 0F, 0F);
      lShoulder = new ModelRenderer(this, 74, 34);
      lShoulder.addBox(-1F, -3F, -4F, 5, 6, 6);
      lShoulder.setRotationPoint(8F, 2F, -0.5F);
      lShoulder.setTextureSize(100, 88);
      lShoulder.mirror = true;
      setRotation(lShoulder, 0F, 0F, 0F);
      rbHorn = new ModelRenderer(this, 25, 22);
      rbHorn.addBox(-6F, -6F, -1F, 2, 1, 1);
      rbHorn.setRotationPoint(0F, 0F, -1.5F);
      rbHorn.setTextureSize(100, 88);
      rbHorn.mirror = true;
      setRotation(rbHorn, 0F, 0F, 0F);
      rtHorn = new ModelRenderer(this, 25, 16);
      rtHorn.addBox(-6F, -8F, -1F, 1, 3, 1);
      rtHorn.setRotationPoint(0F, 0F, -1.5F);
      rtHorn.setTextureSize(100, 88);
      rtHorn.mirror = true;
      setRotation(rtHorn, 0F, 0F, 0F);
      lbHorn = new ModelRenderer(this, 67, 22);
      lbHorn.addBox(4F, -6F, -1F, 2, 1, 1);
      lbHorn.setRotationPoint(0F, 0F, -1.5F);
      lbHorn.setTextureSize(100, 88);
      lbHorn.mirror = true;
      setRotation(lbHorn, 0F, 0F, 0F);
      ltHorn = new ModelRenderer(this, 69, 16);
      ltHorn.addBox(5F, -8F, -1F, 1, 3, 1);
      ltHorn.setRotationPoint(0F, 0F, -1.5F);
      ltHorn.setTextureSize(100, 88);
      ltHorn.mirror = true;
      setRotation(ltHorn, 0F, 0F, 0F);
      head = new ModelRenderer(this, 33, 17);
      head.addBox(-4F, -8F, -4F, 8, 8, 8);
      head.setRotationPoint(0F, 0F, -1.5F);
      head.setTextureSize(100, 88);
      head.mirror = true;
      setRotation(head, 0F, 0F, 0F);
      body = new ModelRenderer(this, 27, 36);
      body.addBox(-4F, 0F, -2F, 14, 12, 8);
      body.setRotationPoint(-3F, 0F, -2.5F);
      body.setTextureSize(100, 88);
      body.mirror = true;
      setRotation(body, 0F, 0F, 0F);
      rArm = new ModelRenderer(this, 8, 49);
      rArm.addBox(-3F, -2F, -2F, 4, 11, 4);
      rArm.setRotationPoint(-8F, 2F, -1.5F);
      rArm.setTextureSize(100, 88);
      rArm.mirror = true;
      setRotation(rArm, 0F, 0F, 0F);
      lArm = new ModelRenderer(this, 75, 49);
      lArm.addBox(-1F, -2F, -2F, 4, 11, 4);
      lArm.setRotationPoint(8F, 2F, -1.5F);
      lArm.setTextureSize(100, 88);
      lArm.mirror = true;
      setRotation(lArm, 0F, 0F, 0F);
      hips = new ModelRenderer(this, 32, 59);
      hips.addBox(-2F, 0F, -2F, 12, 5, 5);
      hips.setRotationPoint(-4F, 12F, -0.5F);
      hips.setTextureSize(100, 88);
      hips.mirror = true;
      setRotation(hips, 0F, 0F, 0F);
      rLeg = new ModelRenderer(this, 29, 72);
      rLeg.addBox(-2F, 0F, -2F, 5, 7, 5);
      rLeg.setRotationPoint(-3F, 17F, -0.5F);
      rLeg.setTextureSize(100, 88);
      rLeg.mirror = true;
      setRotation(rLeg, 0F, 0F, 0F);
      lLeg = new ModelRenderer(this, 51, 72);
      lLeg.addBox(-3F, 0F, -3F, 5, 7, 5);
      lLeg.setRotationPoint(3F, 17F, 0.5F);
      lLeg.setTextureSize(100, 88);
      lLeg.mirror = true;
      setRotation(lLeg, 0F, 0F, 0F);
  }
  
  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5, entity);
    rShoulder.render(f5);
    lShoulder.render(f5);
    rbHorn.render(f5);
    rtHorn.render(f5);
    lbHorn.render(f5);
    ltHorn.render(f5);
    head.render(f5);
    body.render(f5);
    rArm.render(f5);
    lArm.render(f5);
    hips.render(f5);
    rLeg.render(f5);
    lLeg.render(f5);
  }
  
  private void setRotation(ModelRenderer model, float x, float y, float z)
  {
    model.rotateAngleX = x;
    model.rotateAngleY = y;
    model.rotateAngleZ = z;
  }
  
  public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6, Entity par7Entity)
  {
      this.head.rotateAngleY = par4 / (180F / (float)Math.PI);
      this.head.rotateAngleX = par5 / (180F / (float)Math.PI);
      this.rbHorn.rotateAngleY = this.head.rotateAngleY;
      this.rbHorn.rotateAngleX = this.head.rotateAngleX;
      this.lbHorn.rotateAngleY = this.head.rotateAngleY;
      this.lbHorn.rotateAngleX = this.head.rotateAngleX;
      this.rtHorn.rotateAngleY = this.head.rotateAngleY;
      this.rtHorn.rotateAngleX = this.head.rotateAngleX;
      this.ltHorn.rotateAngleY = this.head.rotateAngleY;
      this.ltHorn.rotateAngleX = this.head.rotateAngleX;
      this.rArm.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 2.0F * par2 * 0.5F;
      this.lArm.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 2.0F * par2 * 0.5F;
      this.rArm.rotateAngleZ = 0.0F;
      this.lArm.rotateAngleZ = 0.0F;
      this.rShoulder.rotateAngleX = this.rArm.rotateAngleX;
      this.rShoulder.rotateAngleZ = this.rArm.rotateAngleZ;
      this.lShoulder.rotateAngleX = this.lArm.rotateAngleX;
      this.lShoulder.rotateAngleZ = this.lArm.rotateAngleZ;
      this.rLeg.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
      this.lLeg.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
      this.rLeg.rotateAngleY = 0.0F;
      this.lLeg.rotateAngleY = 0.0F;
  }

}
